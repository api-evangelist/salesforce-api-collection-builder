{
  "id": "582f30d6-554e-4cb2-a58f-34f9aa631c05",
  "name": "Salesforce REST Collection Builder",
  "description": "This collection will generate a Postman collection dynamically from the version and sObject API endpoints for Salesforce, producing a definition of the surface area of the API for each individual account.",
  "auth": {
    "type": "oauth2",
    "oauth2": [
      {
        "key": "accessToken",
        "value": "",
        "type": "string"
      },
      {
        "key": "tokenType",
        "value": "Bearer",
        "type": "string"
      },
      {
        "key": "addTokenTo",
        "value": "header",
        "type": "string"
      }
    ]
  },
  "events": [
    {
      "listen": "prerequest",
      "script": {
        "id": "a5e67a82-8153-4423-8a5e-6e893eb96439",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "ef04d130-60e6-4fdd-b55e-eb22f882bbd6",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variables": [],
  "order": [
    "79cad380-8f6c-4211-9eb9-25e4fe965bc2",
    "ad1fb4a4-9af0-4353-9a8b-c0238d44219f",
    "2a30672f-c552-4d89-bbf8-c04b4be82302"
  ],
  "folders_order": [],
  "protocolProfileBehavior": [],
  "folders": [],
  "requests": [
    {
      "id": "2a30672f-c552-4d89-bbf8-c04b4be82302",
      "name": "Build Collection",
      "url": "{{host}}/services/data/{{version}}/sobjects/",
      "description": "Lists all of the available objects for an organization within a specific version of Salesforce.",
      "data": null,
      "dataOptions": null,
      "dataMode": null,
      "headerData": [],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "b5efea16-5a2d-443c-8a80-4a84d529d0a1",
            "exec": [
              "var postman_api_key = pm.environment.get(\"postman_api_key\");",
              "",
              "// Get a list of all collections",
              "const collectionsRequest = {",
              "  url: 'https://api.getpostman.com/collections',",
              "  method: 'GET',",
              "  header: 'X-Api-Key:' + postman_api_key,",
              "};",
              "",
              "pm.sendRequest(collectionsRequest, function (err, res) {",
              "",
              "    if (err) {",
              "        console.log(err);",
              "    } else {",
              "",
              "    var response = res.json();",
              "    var collections = response.collections;",
              "",
              "    // Loop through all the collections",
              "    for (index = 0; index < collections.length; index++) {",
              "",
              "        // Only run if it is this builder collection",
              "        if(collections[index].name == 'Salesforce REST Collection Builder'){",
              "",
              "          $builderCollectionId = collections[index].id;",
              "",
              "          // Get the collection details",
              "          const collectionRequest = {",
              "            url: 'https://api.getpostman.com/collections/' + $builderCollectionId,",
              "            method: 'GET',",
              "            header: 'X-Api-Key:' + postman_api_key,",
              "          };",
              "",
              "          pm.sendRequest(collectionRequest, function (err, res) {",
              "",
              "              if (err) {",
              "                  console.log(err);",
              "              } else {",
              "",
              "              var response = res.json();",
              "",
              "              console.log(\"Looping through objects to build request.\");",
              "",
              "              var body = JSON.parse(responseBody);",
              "              var sobjects = body.sobjects;",
              "",
              "              var version = pm.environment.get(\"version\");",
              "",
              "              var folderId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });",
              "              var parentFolder = {};",
              "              parentFolder.name = 'Generated Requests';",
              "              parentFolder.description = 'This folder has been generated and filled with the requests from version ' + version + ' of the Salesforce API.';",
              "              parentFolder._postman_id = folderId;",
              "              parentFolder.item = [];",
              "",
              "              for (index = 0; index < sobjects.length; index++) {",
              "",
              "                  var url = sobjects[index].urls;",
              "",
              "                  for (const [key, value] of Object.entries(url)) {",
              "",
              "                      var link_name = key;",
              "                      var link_path = value;",
              "",
              "                  }",
              "",
              "                  var listing_path = '';",
              "                  if(sobjects[index].urls.sobject){",
              "                      listing_path = sobjects[index].urls.sobject;",
              "                  }",
              "",
              "                  var pathElement = listing_path.split(\"/\");",
              "                  var resourceRaw = pathElement[5];",
              "                  var resource = resourceRaw.replace(/([a-z0-9])([A-Z])/g, '$1 $2')",
              "                  var resourceLower = resource.toLowerCase();",
              "                  var resourceDescription = \"This is an autogenerate endpoint for managing the \" + resourceLower + \" set of resources.\";",
              "",
              "                  // Resource Folder",
              "                  var folderId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });",
              "                  var resourceFolder = {};",
              "                  resourceFolder.name = resource;",
              "                  resourceFolder.description = resourceDescription;",
              "                  resourceFolder._postman_id = folderId;",
              "                  resourceFolder.item = [];",
              "",
              "                  // Resource Listing Request",
              "                  var requestId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });",
              "                  var resourceItem = {};",
              "                  resourceItem.name = resource;",
              "                  resourceItem.description = resourceDescription;",
              "                  resourceItem._postman_id = requestId;",
              "                  resourceItem.protocolProfileBehavior = {};",
              "                  resourceItem.protocolProfileBehavior.disableBodyPruning = true;",
              "                  resourceItem.request = {};",
              "                  resourceItem.request.method = 'GET';",
              "                  resourceItem.request.header = [];",
              "                  resourceItem.request.header = [];",
              "                  resourceItem.request.url = {};",
              "                  resourceItem.request.url.raw = '{{host}}' + listing_path;",
              "                  resourceItem.request.url.host = '{{host}}' + listing_path;",
              "                  resourceItem.request.url.path = [];",
              "                  var pathArray = listing_path.split(\"/\");",
              "                  for (pIndex = 0; pIndex < pathArray.length; pIndex++) {",
              "                    resourceItem.request.url.path.push(pathArray[pIndex]);",
              "                    }",
              "                  resourceItem.request.url.path = [];",
              "                  resourceItem.response = [];",
              "                  resourceFolder.item.push(resourceItem);",
              "",
              "                  var detail_path = '';",
              "                  if(sobjects[index].urls.rowTemplate){",
              "                      detail_path = sobjects[index].urls.rowTemplate;",
              "                  }",
              "",
              "                  // Resource Detail Request",
              "                  var requestId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });",
              "                  var resourceItem = {};",
              "                  resourceItem.name = resource + ' Detail';",
              "                  resourceItem.description = 'This is for retrieving the detail for a ' + resourceLower + '.';;",
              "                  resourceItem._postman_id = requestId;",
              "                  resourceItem.protocolProfileBehavior = {};",
              "                  resourceItem.protocolProfileBehavior.disableBodyPruning = true;",
              "                  resourceItem.request = {};",
              "                  resourceItem.request.method = 'GET';",
              "                  resourceItem.request.header = [];",
              "                  resourceItem.request.header = [];",
              "                  resourceItem.request.url = {};",
              "                  resourceItem.request.url.raw = '{{host}}' + detail_path;",
              "                  resourceItem.request.url.host = '{{host}}' + detail_path;",
              "                  resourceItem.request.url.path = [];",
              "                  var pathArray = listing_path.split(\"/\");",
              "                  for (pIndex = 0; pIndex < pathArray.length; pIndex++) {",
              "                    resourceItem.request.url.path.push(pathArray[pIndex]);",
              "                    }",
              "                  resourceItem.request.url.path = [];",
              "                  resourceItem.response = [];",
              "                  resourceFolder.item.push(resourceItem);",
              "",
              "                  var describe_path = '';",
              "                  if(sobjects[index].urls.describe){",
              "                      describe_path = sobjects[index].urls.describe;",
              "                  }",
              "",
              "                  // Resource Describe Request",
              "                  var requestId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });",
              "                  var resourceItem = {};",
              "                  resourceItem.name = 'Describe ' + resource;",
              "                  resourceItem.description = 'This is for describing a ' + resourceLower + ' object.';",
              "                  resourceItem._postman_id = requestId;",
              "                  resourceItem.protocolProfileBehavior = {};",
              "                  resourceItem.protocolProfileBehavior.disableBodyPruning = true;",
              "                  resourceItem.request = {};",
              "                  resourceItem.request.method = 'GET';",
              "                  resourceItem.request.header = [];",
              "                  resourceItem.request.header = [];",
              "                  resourceItem.request.url = {};",
              "                  resourceItem.request.url.raw = '{{host}}' + describe_path;",
              "                  resourceItem.request.url.host = '{{host}}' + describe_path;",
              "                  resourceItem.request.url.path = [];",
              "                  var pathArray = listing_path.split(\"/\");",
              "                  for (pIndex = 0; pIndex < pathArray.length; pIndex++) {",
              "                    resourceItem.request.url.path.push(pathArray[pIndex]);",
              "                    }",
              "                  resourceItem.request.url.path = [];",
              "                  resourceItem.response = [];",
              "                  resourceFolder.item.push(resourceItem);",
              "",
              "                  // Append Item",
              "                  parentFolder.item.push(resourceFolder);",
              "              }",
              "",
              "              // Add the base folder we've created",
              "              response.collection.item.push(parentFolder);",
              "",
              "              // Update Collection Using The Postman API",
              "              const updateCollection = {",
              "                url: 'https://api.getpostman.com/collections/' + $builderCollectionId,",
              "                method: 'PUT',",
              "                header: 'X-Api-Key:' + postman_api_key,",
              "                body: {",
              "                  mode: 'raw',",
              "                  raw: JSON.stringify(response)",
              "                }",
              "              };",
              "",
              "              console.log('Updating collection with generated requests.')",
              "              ",
              "              pm.sendRequest(updateCollection, function (err, res) {",
              "                console.log(err ? err : res.json());",
              "              });",
              "",
              "              }",
              "",
              "          });",
              "",
              "          }",
              "      }",
              "",
              "    }",
              "",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "folder": null,
      "preRequestScript": null,
      "tests": "var postman_api_key = pm.environment.get(\"postman_api_key\");\n\n// Get a list of all collections\nconst collectionsRequest = {\n  url: 'https://api.getpostman.com/collections',\n  method: 'GET',\n  header: 'X-Api-Key:' + postman_api_key,\n};\n\npm.sendRequest(collectionsRequest, function (err, res) {\n\n    if (err) {\n        console.log(err);\n    } else {\n\n    var response = res.json();\n    var collections = response.collections;\n\n    // Loop through all the collections\n    for (index = 0; index < collections.length; index++) {\n\n        // Only run if it is this builder collection\n        if(collections[index].name == 'Salesforce REST Collection Builder'){\n\n          $builderCollectionId = collections[index].id;\n\n          // Get the collection details\n          const collectionRequest = {\n            url: 'https://api.getpostman.com/collections/' + $builderCollectionId,\n            method: 'GET',\n            header: 'X-Api-Key:' + postman_api_key,\n          };\n\n          pm.sendRequest(collectionRequest, function (err, res) {\n\n              if (err) {\n                  console.log(err);\n              } else {\n\n              var response = res.json();\n\n              console.log(\"Looping through objects to build request.\");\n\n              var body = JSON.parse(responseBody);\n              var sobjects = body.sobjects;\n\n              var version = pm.environment.get(\"version\");\n\n              var folderId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });\n              var parentFolder = {};\n              parentFolder.name = 'Generated Requests';\n              parentFolder.description = 'This folder has been generated and filled with the requests from version ' + version + ' of the Salesforce API.';\n              parentFolder._postman_id = folderId;\n              parentFolder.item = [];\n\n              for (index = 0; index < sobjects.length; index++) {\n\n                  var url = sobjects[index].urls;\n\n                  for (const [key, value] of Object.entries(url)) {\n\n                      var link_name = key;\n                      var link_path = value;\n\n                  }\n\n                  var listing_path = '';\n                  if(sobjects[index].urls.sobject){\n                      listing_path = sobjects[index].urls.sobject;\n                  }\n\n                  var pathElement = listing_path.split(\"/\");\n                  var resourceRaw = pathElement[5];\n                  var resource = resourceRaw.replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n                  var resourceLower = resource.toLowerCase();\n                  var resourceDescription = \"This is an autogenerate endpoint for managing the \" + resourceLower + \" set of resources.\";\n\n                  // Resource Folder\n                  var folderId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });\n                  var resourceFolder = {};\n                  resourceFolder.name = resource;\n                  resourceFolder.description = resourceDescription;\n                  resourceFolder._postman_id = folderId;\n                  resourceFolder.item = [];\n\n                  // Resource Listing Request\n                  var requestId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });\n                  var resourceItem = {};\n                  resourceItem.name = resource;\n                  resourceItem.description = resourceDescription;\n                  resourceItem._postman_id = requestId;\n                  resourceItem.protocolProfileBehavior = {};\n                  resourceItem.protocolProfileBehavior.disableBodyPruning = true;\n                  resourceItem.request = {};\n                  resourceItem.request.method = 'GET';\n                  resourceItem.request.header = [];\n                  resourceItem.request.header = [];\n                  resourceItem.request.url = {};\n                  resourceItem.request.url.raw = '{{host}}' + listing_path;\n                  resourceItem.request.url.host = '{{host}}' + listing_path;\n                  resourceItem.request.url.path = [];\n                  var pathArray = listing_path.split(\"/\");\n                  for (pIndex = 0; pIndex < pathArray.length; pIndex++) {\n                    resourceItem.request.url.path.push(pathArray[pIndex]);\n                    }\n                  resourceItem.request.url.path = [];\n                  resourceItem.response = [];\n                  resourceFolder.item.push(resourceItem);\n\n                  var detail_path = '';\n                  if(sobjects[index].urls.rowTemplate){\n                      detail_path = sobjects[index].urls.rowTemplate;\n                  }\n\n                  // Resource Detail Request\n                  var requestId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });\n                  var resourceItem = {};\n                  resourceItem.name = resource + ' Detail';\n                  resourceItem.description = 'This is for retrieving the detail for a ' + resourceLower + '.';;\n                  resourceItem._postman_id = requestId;\n                  resourceItem.protocolProfileBehavior = {};\n                  resourceItem.protocolProfileBehavior.disableBodyPruning = true;\n                  resourceItem.request = {};\n                  resourceItem.request.method = 'GET';\n                  resourceItem.request.header = [];\n                  resourceItem.request.header = [];\n                  resourceItem.request.url = {};\n                  resourceItem.request.url.raw = '{{host}}' + detail_path;\n                  resourceItem.request.url.host = '{{host}}' + detail_path;\n                  resourceItem.request.url.path = [];\n                  var pathArray = listing_path.split(\"/\");\n                  for (pIndex = 0; pIndex < pathArray.length; pIndex++) {\n                    resourceItem.request.url.path.push(pathArray[pIndex]);\n                    }\n                  resourceItem.request.url.path = [];\n                  resourceItem.response = [];\n                  resourceFolder.item.push(resourceItem);\n\n                  var describe_path = '';\n                  if(sobjects[index].urls.describe){\n                      describe_path = sobjects[index].urls.describe;\n                  }\n\n                  // Resource Describe Request\n                  var requestId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });\n                  var resourceItem = {};\n                  resourceItem.name = 'Describe ' + resource;\n                  resourceItem.description = 'This is for describing a ' + resourceLower + ' object.';\n                  resourceItem._postman_id = requestId;\n                  resourceItem.protocolProfileBehavior = {};\n                  resourceItem.protocolProfileBehavior.disableBodyPruning = true;\n                  resourceItem.request = {};\n                  resourceItem.request.method = 'GET';\n                  resourceItem.request.header = [];\n                  resourceItem.request.header = [];\n                  resourceItem.request.url = {};\n                  resourceItem.request.url.raw = '{{host}}' + describe_path;\n                  resourceItem.request.url.host = '{{host}}' + describe_path;\n                  resourceItem.request.url.path = [];\n                  var pathArray = listing_path.split(\"/\");\n                  for (pIndex = 0; pIndex < pathArray.length; pIndex++) {\n                    resourceItem.request.url.path.push(pathArray[pIndex]);\n                    }\n                  resourceItem.request.url.path = [];\n                  resourceItem.response = [];\n                  resourceFolder.item.push(resourceItem);\n\n                  // Append Item\n                  parentFolder.item.push(resourceFolder);\n              }\n\n              // Add the base folder we've created\n              response.collection.item.push(parentFolder);\n\n              // Update Collection Using The Postman API\n              const updateCollection = {\n                url: 'https://api.getpostman.com/collections/' + $builderCollectionId,\n                method: 'PUT',\n                header: 'X-Api-Key:' + postman_api_key,\n                body: {\n                  mode: 'raw',\n                  raw: JSON.stringify(response)\n                }\n              };\n\n              console.log('Updating collection with generated requests.')\n              \n              pm.sendRequest(updateCollection, function (err, res) {\n                console.log(err ? err : res.json());\n              });\n\n              }\n\n          });\n\n          }\n      }\n\n    }\n\n});\n",
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "582f30d6-554e-4cb2-a58f-34f9aa631c05",
      "headers": "",
      "pathVariables": []
    },
    {
      "id": "79cad380-8f6c-4211-9eb9-25e4fe965bc2",
      "name": "List All Versions",
      "url": "{{host}}/services/data/",
      "description": "Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root.",
      "data": null,
      "dataOptions": null,
      "dataMode": null,
      "headerData": [],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": null,
      "responses": [
        {
          "id": "aa2a9ec3-079b-45f3-834f-0e4fec5bc8a9",
          "name": "Versions",
          "status": "",
          "mime": "",
          "language": "json",
          "text": "[\n    {\n        \"label\": \"Winter '11\",\n        \"url\": \"/services/data/v20.0\",\n        \"version\": \"20.0\"\n    },\n    {\n        \"label\": \"Spring '11\",\n        \"url\": \"/services/data/v21.0\",\n        \"version\": \"21.0\"\n    },\n    {\n        \"label\": \"Summer '11\",\n        \"url\": \"/services/data/v22.0\",\n        \"version\": \"22.0\"\n    },\n    {\n        \"label\": \"Winter '12\",\n        \"url\": \"/services/data/v23.0\",\n        \"version\": \"23.0\"\n    },\n    {\n        \"label\": \"Spring '12\",\n        \"url\": \"/services/data/v24.0\",\n        \"version\": \"24.0\"\n    },\n    {\n        \"label\": \"Summer '12\",\n        \"url\": \"/services/data/v25.0\",\n        \"version\": \"25.0\"\n    },\n    {\n        \"label\": \"Winter '13\",\n        \"url\": \"/services/data/v26.0\",\n        \"version\": \"26.0\"\n    },\n    {\n        \"label\": \"Spring '13\",\n        \"url\": \"/services/data/v27.0\",\n        \"version\": \"27.0\"\n    },\n    {\n        \"label\": \"Summer '13\",\n        \"url\": \"/services/data/v28.0\",\n        \"version\": \"28.0\"\n    },\n    {\n        \"label\": \"Winter '14\",\n        \"url\": \"/services/data/v29.0\",\n        \"version\": \"29.0\"\n    },\n    {\n        \"label\": \"Spring '14\",\n        \"url\": \"/services/data/v30.0\",\n        \"version\": \"30.0\"\n    },\n    {\n        \"label\": \"Summer '14\",\n        \"url\": \"/services/data/v31.0\",\n        \"version\": \"31.0\"\n    },\n    {\n        \"label\": \"Winter '15\",\n        \"url\": \"/services/data/v32.0\",\n        \"version\": \"32.0\"\n    },\n    {\n        \"label\": \"Spring '15\",\n        \"url\": \"/services/data/v33.0\",\n        \"version\": \"33.0\"\n    },\n    {\n        \"label\": \"Summer '15\",\n        \"url\": \"/services/data/v34.0\",\n        \"version\": \"34.0\"\n    },\n    {\n        \"label\": \"Winter '16\",\n        \"url\": \"/services/data/v35.0\",\n        \"version\": \"35.0\"\n    },\n    {\n        \"label\": \"Spring '16\",\n        \"url\": \"/services/data/v36.0\",\n        \"version\": \"36.0\"\n    },\n    {\n        \"label\": \"Summer '16\",\n        \"url\": \"/services/data/v37.0\",\n        \"version\": \"37.0\"\n    },\n    {\n        \"label\": \"Winter '17\",\n        \"url\": \"/services/data/v38.0\",\n        \"version\": \"38.0\"\n    },\n    {\n        \"label\": \"Spring '17\",\n        \"url\": \"/services/data/v39.0\",\n        \"version\": \"39.0\"\n    },\n    {\n        \"label\": \"Summer '17\",\n        \"url\": \"/services/data/v40.0\",\n        \"version\": \"40.0\"\n    },\n    {\n        \"label\": \"Winter '18\",\n        \"url\": \"/services/data/v41.0\",\n        \"version\": \"41.0\"\n    },\n    {\n        \"label\": \"Spring ’18\",\n        \"url\": \"/services/data/v42.0\",\n        \"version\": \"42.0\"\n    },\n    {\n        \"label\": \"Summer '18\",\n        \"url\": \"/services/data/v43.0\",\n        \"version\": \"43.0\"\n    },\n    {\n        \"label\": \"Winter '19\",\n        \"url\": \"/services/data/v44.0\",\n        \"version\": \"44.0\"\n    },\n    {\n        \"label\": \"Spring '19\",\n        \"url\": \"/services/data/v45.0\",\n        \"version\": \"45.0\"\n    },\n    {\n        \"label\": \"Summer '19\",\n        \"url\": \"/services/data/v46.0\",\n        \"version\": \"46.0\"\n    }\n]",
          "responseCode": {
            "code": 200,
            "name": "OK"
          },
          "requestObject": {
            "data": null,
            "dataMode": null,
            "dataOptions": null,
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "url": "https://na114.salesforce.com/services/data/"
          },
          "headers": [
            {
              "key": "Date",
              "value": "Fri, 11 Oct 2019 18:12:29 GMT"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Public-Key-Pins-Report-Only",
              "value": "pin-sha256=\"9n0izTnSRF+W4W4JTq51avSXkWhQB8duS2bxVLfzXsY=\"; pin-sha256=\"5kJvNEMw0KjrCAu7eXY5HZdvyCS13BbA0VJG1RSP91w=\"; pin-sha256=\"njN4rRG+22dNXAi+yb8e3UMypgzPUPHlv4+foULwl1g=\"; max-age=86400; includeSubDomains; report-uri=\"https://a.forcesslreports.com/hpkp-report/00D3k000000tE8Um\";"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=86400; report-uri=\"https://a.forcesslreports.com/Expect-CT-report/00D3k000000tE8Um\";"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Robots-Tag",
              "value": "none"
            },
            {
              "key": "Cache-Control",
              "value": "private"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "cookies": [],
          "request": "79cad380-8f6c-4211-9eb9-25e4fe965bc2",
          "collection": "582f30d6-554e-4cb2-a58f-34f9aa631c05"
        }
      ],
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "582f30d6-554e-4cb2-a58f-34f9aa631c05",
      "headers": "",
      "pathVariables": []
    },
    {
      "id": "ad1fb4a4-9af0-4353-9a8b-c0238d44219f",
      "name": "List All Objects For Version",
      "url": "{{host}}/services/data/{{version}}/sobjects/",
      "description": "Lists all of the available objects for an organization within a specific version of Salesforce.",
      "data": null,
      "dataOptions": null,
      "dataMode": null,
      "headerData": [],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "582f30d6-554e-4cb2-a58f-34f9aa631c05",
      "headers": "",
      "pathVariables": []
    }
  ]
}
